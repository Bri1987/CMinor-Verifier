//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from pi.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="piParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface IpiVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMain([NotNull] piParser.MainContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecl([NotNull] piParser.DeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.declInsideClass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclInsideClass([NotNull] piParser.DeclInsideClassContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] piParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.fnDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFnDecl([NotNull] piParser.FnDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassDecl([NotNull] piParser.ClassDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.beforeFunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBeforeFunc([NotNull] piParser.BeforeFuncContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.beforeBranch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBeforeBranch([NotNull] piParser.BeforeBranchContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredicate([NotNull] piParser.PredicateContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.formalsOrEmpty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormalsOrEmpty([NotNull] piParser.FormalsOrEmptyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.formals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormals([NotNull] piParser.FormalsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVar([NotNull] piParser.VarContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.varOutSideOfFunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarOutSideOfFunc([NotNull] piParser.VarOutSideOfFuncContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.paramVar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParamVar([NotNull] piParser.ParamVarContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.stmtBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtBlock([NotNull] piParser.StmtBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.varDeclOutsideOfFunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarDeclOutsideOfFunc([NotNull] piParser.VarDeclOutsideOfFuncContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarDecl([NotNull] piParser.VarDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmt([NotNull] piParser.StmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.varDeclAndAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarDeclAndAssign([NotNull] piParser.VarDeclAndAssignContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStmt([NotNull] piParser.IfStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.whileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStmt([NotNull] piParser.WhileStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.forCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForCondition([NotNull] piParser.ForConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStmt([NotNull] piParser.ForStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.termination"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTermination([NotNull] piParser.TerminationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.terminationArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerminationArgs([NotNull] piParser.TerminationArgsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStmt([NotNull] piParser.ReturnStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.breakStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStmt([NotNull] piParser.BreakStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.assertStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssertStmt([NotNull] piParser.AssertStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.commaSeperatedListOfVars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommaSeperatedListOfVars([NotNull] piParser.CommaSeperatedListOfVarsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MulExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulExpr([NotNull] piParser.MulExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AndExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpr([NotNull] piParser.AndExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IdentExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentExpr([NotNull] piParser.IdentExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ConstExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstExpr([NotNull] piParser.ConstExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>QuantifiedExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuantifiedExpr([NotNull] piParser.QuantifiedExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LengthExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLengthExpr([NotNull] piParser.LengthExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>InequExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInequExpr([NotNull] piParser.InequExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SubExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubExpr([NotNull] piParser.SubExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SubAssignExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubAssignExpr([NotNull] piParser.SubAssignExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AddExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddExpr([NotNull] piParser.AddExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ArrUpdExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrUpdExpr([NotNull] piParser.ArrUpdExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UnaryExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpr([NotNull] piParser.UnaryExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EquExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEquExpr([NotNull] piParser.EquExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OrExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrExpr([NotNull] piParser.OrExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AssignExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignExpr([NotNull] piParser.AssignExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MemExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemExpr([NotNull] piParser.MemExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MemAssignExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemAssignExpr([NotNull] piParser.MemAssignExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParExpr([NotNull] piParser.ParExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NewExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewExpr([NotNull] piParser.NewExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ArrowExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrowExpr([NotNull] piParser.ArrowExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CallExpr</c>
	/// labeled alternative in <see cref="piParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallExpr([NotNull] piParser.CallExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.callInterior"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallInterior([NotNull] piParser.CallInteriorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant([NotNull] piParser.ConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnnotation([NotNull] piParser.AnnotationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.annotationWithLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnnotationWithLabel([NotNull] piParser.AnnotationWithLabelContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.annotationPre"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnnotationPre([NotNull] piParser.AnnotationPreContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="piParser.annotationPost"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnnotationPost([NotNull] piParser.AnnotationPostContext context);
}
