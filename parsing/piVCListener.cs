//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from piVC.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="piVCParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface IpiVCListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMain([NotNull] piVCParser.MainContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMain([NotNull] piVCParser.MainContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl([NotNull] piVCParser.DeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl([NotNull] piVCParser.DeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.declInsideClass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclInsideClass([NotNull] piVCParser.DeclInsideClassContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.declInsideClass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclInsideClass([NotNull] piVCParser.DeclInsideClassContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] piVCParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] piVCParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.fnDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFnDecl([NotNull] piVCParser.FnDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.fnDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFnDecl([NotNull] piVCParser.FnDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDecl([NotNull] piVCParser.ClassDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDecl([NotNull] piVCParser.ClassDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.beforeFunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBeforeFunc([NotNull] piVCParser.BeforeFuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.beforeFunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBeforeFunc([NotNull] piVCParser.BeforeFuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.beforeBranch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBeforeBranch([NotNull] piVCParser.BeforeBranchContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.beforeBranch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBeforeBranch([NotNull] piVCParser.BeforeBranchContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicate([NotNull] piVCParser.PredicateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicate([NotNull] piVCParser.PredicateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.formalsOrEmpty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormalsOrEmpty([NotNull] piVCParser.FormalsOrEmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.formalsOrEmpty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormalsOrEmpty([NotNull] piVCParser.FormalsOrEmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.formals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormals([NotNull] piVCParser.FormalsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.formals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormals([NotNull] piVCParser.FormalsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar([NotNull] piVCParser.VarContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar([NotNull] piVCParser.VarContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.varOutSideOfFunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarOutSideOfFunc([NotNull] piVCParser.VarOutSideOfFuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.varOutSideOfFunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarOutSideOfFunc([NotNull] piVCParser.VarOutSideOfFuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.paramVar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParamVar([NotNull] piVCParser.ParamVarContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.paramVar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParamVar([NotNull] piVCParser.ParamVarContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.stmtBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtBlock([NotNull] piVCParser.StmtBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.stmtBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtBlock([NotNull] piVCParser.StmtBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.varDeclOutsideOfFunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDeclOutsideOfFunc([NotNull] piVCParser.VarDeclOutsideOfFuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.varDeclOutsideOfFunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDeclOutsideOfFunc([NotNull] piVCParser.VarDeclOutsideOfFuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDecl([NotNull] piVCParser.VarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDecl([NotNull] piVCParser.VarDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt([NotNull] piVCParser.StmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt([NotNull] piVCParser.StmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.varDeclAndAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDeclAndAssign([NotNull] piVCParser.VarDeclAndAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.varDeclAndAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDeclAndAssign([NotNull] piVCParser.VarDeclAndAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStmt([NotNull] piVCParser.IfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStmt([NotNull] piVCParser.IfStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.whileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStmt([NotNull] piVCParser.WhileStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.whileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStmt([NotNull] piVCParser.WhileStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStmt([NotNull] piVCParser.ForStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStmt([NotNull] piVCParser.ForStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.termination"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTermination([NotNull] piVCParser.TerminationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.termination"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTermination([NotNull] piVCParser.TerminationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.terminationArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerminationArgs([NotNull] piVCParser.TerminationArgsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.terminationArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerminationArgs([NotNull] piVCParser.TerminationArgsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStmt([NotNull] piVCParser.ReturnStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStmt([NotNull] piVCParser.ReturnStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.breakStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakStmt([NotNull] piVCParser.BreakStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.breakStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakStmt([NotNull] piVCParser.BreakStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.assertStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssertStmt([NotNull] piVCParser.AssertStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.assertStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssertStmt([NotNull] piVCParser.AssertStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.commaSeperatedListOfUniversalVarDecls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommaSeperatedListOfUniversalVarDecls([NotNull] piVCParser.CommaSeperatedListOfUniversalVarDeclsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.commaSeperatedListOfUniversalVarDecls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommaSeperatedListOfUniversalVarDecls([NotNull] piVCParser.CommaSeperatedListOfUniversalVarDeclsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.commaSeperatedListOfExistentialVarDecls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommaSeperatedListOfExistentialVarDecls([NotNull] piVCParser.CommaSeperatedListOfExistentialVarDeclsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.commaSeperatedListOfExistentialVarDecls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommaSeperatedListOfExistentialVarDecls([NotNull] piVCParser.CommaSeperatedListOfExistentialVarDeclsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.lValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLValue([NotNull] piVCParser.LValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.lValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLValue([NotNull] piVCParser.LValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] piVCParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] piVCParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.callInterior"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallInterior([NotNull] piVCParser.CallInteriorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.callInterior"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallInterior([NotNull] piVCParser.CallInteriorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant([NotNull] piVCParser.ConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant([NotNull] piVCParser.ConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotation([NotNull] piVCParser.AnnotationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotation([NotNull] piVCParser.AnnotationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.annotationExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationExpr([NotNull] piVCParser.AnnotationExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.annotationExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationExpr([NotNull] piVCParser.AnnotationExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.annotationWithLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationWithLabel([NotNull] piVCParser.AnnotationWithLabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.annotationWithLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationWithLabel([NotNull] piVCParser.AnnotationWithLabelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.annotationPre"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationPre([NotNull] piVCParser.AnnotationPreContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.annotationPre"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationPre([NotNull] piVCParser.AnnotationPreContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="piVCParser.annotationPost"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationPost([NotNull] piVCParser.AnnotationPostContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="piVCParser.annotationPost"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationPost([NotNull] piVCParser.AnnotationPostContext context);
}
